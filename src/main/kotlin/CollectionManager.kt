/**
 * Интерфейс команд пользователя
 */
interface CollectionManager<T> {
    /**
     * Возвращает информацию о коллекции (тип, дата инициализации, количество элементов и т.д.)
     * @return информацию о коллекции в виде текста
     */
    fun info(): String
    /**
     * Возвращает все элементы коллекции в строковом представлении
     * @return все элементы коллекции в виде текста
     */
    fun show(): String
    /**
     * Обеспечивает добавление нового элемента в коллекцию
     * @param p свойства добавляемого элемента записанные через пробел в строку
     * @return true если коллекция изменилась
     */
    fun add(p: String): Boolean
    /**
     * Обеспечивает обновление значения элемента коллекции, id которого равен заданному
     * @param index индекс элемента коллекции
     * @param p свойства добавляемого элемента записанные через пробел в строку
     */
    fun update(index: Int, p: String)
    /**
     * Обеспечивает удаление элемента из коллекции по его id
     * @param index индекс элемента коллекции
     */
    fun removeId(index: Int)
    /**
     * Обеспечивает очистку коллекции
     */
    fun clear()
    /**
     * Обеспечивает сохранение коллекции в файл
     */
    fun save()
    /**
     * Обеспечивает добавление нового элемента в коллекцию, если его значение меньше, чем у наименьшего элемента коллекции
     * @param p свойства добавляемого элемента записанные через пробел в строку
     */
    fun addIfMin(p: String)
    /**
     * TODO(Разобраться)
     */
    fun removeGreater()
    /**
     * Обеспечивает удаление из коллекции всех элементов,значение поля location которого эквивалентно заданному.
     * @param location значения полей класса [Location] указанных через пробел
     * @return true если коллекция изменилась
     */
    fun removeAllByLocation(location: String): Boolean
    /**
     * Возвращает элементы, значение поля hairColor которых больше заданного.
     * @param color цвет волос, может быть null
     * @return элементы коллекции
     */
    fun filterGreaterThanHairColor(color: Color?): String
    /**
     * Возвращает значения поля hairColor всех элементов в порядке возрастания
     * @param color цвет волос, может быть null
     * @return элементы коллекции
     */
    fun printFieldAscendingHairColor(color: Color?): String
}