/**
 * Интерфейс команд пользователя
 */
interface CollectionManager<T> {
    /**
     * Возвращает справку по доступным командам
     * @return справка в виде текста
     */
    fun help(): String
    /**
     * Возвращает информацию о коллекции (тип, дата инициализации, количество элементов и т.д.)
     * @return информацию о коллекции в виде текста
     */
    fun info(): String
    /**
     * Возвращает все элементы коллекции в строковом представлении
     * @return все элементы коллекции в виде текста
     */
    fun show(): String
    /**
     * Обеспечивает добавление нового элемента в коллекцию
     * @param e элемент добавляемый в коллекцию
     * @return true если коллекция изменилась
     */
    fun add(e: T): Boolean
    /**
     * Обновляет значение элемента коллекции, id которого равен заданному
     * @param index индекс элемента коллекции
     * @param e замещающий элемент
     */
    fun update(index: Int, e: T)
    /**
     * Обеспечивает удаление элемента из коллекции по его id
     * @param index индекс элемента коллекции
     */
    fun removeId(index: Int)
    /**
     * Обеспечивает очистку коллекции
     */
    fun clear()
    /**
     * Обеспечивает сохранение коллекции в файл
     */
    fun save()
    /**
     * Обеспечивает чтение и исполнение скрипта из указанного файла.
     * В скрипте содержатся команды в таком же виде, в котором их вводит пользователь в интерактивном режиме
     * @param filename имя файла
     */
    fun executeScript(filename: String)
    /**
     * Завершает программу (без сохранения в файл)
     */
    fun exit()
    /**
     * Обеспечивает удаление первого элемента из коллекции
     */
    fun removeFirst()
    /**
     * Обеспечивает добавление нового элемента в коллекцию, если его значение превышает значение наибольшего элемента этой коллекции
     * @param e добавляемый класс [T]
     */
    fun addIfMax(e: T)
    /**
     * Возвращает последние 9 команд (без их аргументов)
     * @return история команд в виде текста
     */
    fun history(): String
    /**
     * Возвращает сумму значений поля height для всех элементов коллекции
     * @return сумма значений height
     */
    fun sumOfHeight(): Long
    /**
     * Возвращает количество элементов, значение поля hairColor которых равно заданному
     * @param color цвет волос, может быть null
     * @return количество подходящих элементов
     */
    fun countByHairColor(color: Color?): Int
    /**
     * Возвращает количество элементов, значение поля hairColor которых меньше заданного
     * @param color цвет волос, может быть null
     * @return количество подходящих элементов
     */
    fun countLessThanHairColor(color: Color?): Int
}